# Generated by Django 3.1.3 on 2020-11-14 21:35

import django.db.models.deletion
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):

    dependencies = [
        ("mx_atrium", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Institution",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="A unique identifier for each institution, defined by MX.",
                        max_length=256,
                        unique=True,
                        verbose_name="MX Atrium code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text=(
                            'An easy-to-read name for an institution, e.g., "Chase Bank" or "Wells '
                            'Fargo Bank".'
                        ),
                        max_length=256,
                        verbose_name="MX Atrium name",
                    ),
                ),
                (
                    "small_logo_url",
                    models.URLField(
                        help_text=(
                            "URL for a 50px X 50px logo for each institution. A generic logo is "
                            "returned for institutions that don't have one."
                        ),
                        verbose_name="MX Atrium small_logo_url",
                    ),
                ),
                (
                    "medium_logo_url",
                    models.URLField(
                        help_text=(
                            "URL for a 100px X 100px logo for each institution. A generic logo is "
                            "returned for institutions that don't have one."
                        ),
                        verbose_name="MX Atrium medium_logo_url",
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        help_text="Website URL for a particular institution, e.g., www.chase.com.",
                        verbose_name="MX Atrium url",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterField(
            model_name="user",
            name="guid",
            field=models.CharField(
                help_text="A unique identifier, defined by MX.",
                max_length=256,
                unique=True,
                verbose_name="MX Atrium guid",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="is_disabled",
            field=models.BooleanField(
                help_text="True if you want the user disabled, false otherwise.",
                verbose_name="MX Atrium is_disabled",
            ),
        ),
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "aggregated_at",
                    models.DateTimeField(
                        help_text="The date and time the account was last aggregated.",
                        verbose_name="MX Atrium aggregated_at",
                    ),
                ),
                (
                    "successfully_aggregated_at",
                    models.DateTimeField(
                        help_text="The date and time the member was successfully aggregated.",
                        verbose_name="MX Atrium successfully_aggregated_at",
                    ),
                ),
                (
                    "connection_status",
                    models.CharField(
                        choices=[("CHA", "Challenged"), ("CON", "Connected")],
                        help_text="The status of a member's aggregation.",
                        max_length=3,
                        verbose_name="MX Atrium connection_status",
                    ),
                ),
                (
                    "guid",
                    models.CharField(
                        help_text="A unique identifier for the member. Defined by MX.",
                        max_length=256,
                        unique=True,
                        verbose_name="MX Atrium guid",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text=(
                            "The name of the member. If omitted as a parameter when creating the "
                            "member, the institution name within the MX platform will be used, "
                            'e.g., "Chase Bank."'
                        ),
                        max_length=256,
                        verbose_name="MX Atrium name",
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="mx_atrium.institution",
                        verbose_name="MX Atrium Institution",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mx_atrium.user",
                        verbose_name="MX Atrium User",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
